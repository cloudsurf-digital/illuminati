#!/bin/sh
#
# chkconfig: - 96 16
# description: Aws cloudwatch daemon 
# processname: None
# config: None
# pidfile: None

# Source function library.
. /etc/init.d/functions

prog="sauron"
lockfile="/var/lock/subsys/${prog}"

# Run as sauron
# Store the pid file in an appropriate place
PIDFILE="/var/run/${prog}.pid"
# Run sauron, currently with no options
DAEMON=sauron-daemon
DAEMON_OPTS=""

export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"


function start() {
  # If the pid file exists
  if [ -e ${lockfile} ]; then
    echo "$prog has lockfile, ill dont start twice!"
    echo_failure
  elif [ -e $PIDFILE ]; then
    echo "$prog is already running with pid `cat $PIDFILE`"
    echo_failure
  else
    # Start the thing, obviously
    echo -n $"Starting $prog: "
    nohup $DAEMON $DAEMON_OPTS > /dev/null 2>&1  &
    # wait a second
    sleep 1
    if [ -e $PIDFILE ]; then
      touch ${lockfile}
      echo_success
    else
      echo_failure
    fi
  fi
  RETREVAL=$?
  echo
  return $RETREVAL
}

function stop() {
  # And stop it
  echo -n $"Stopping $prog: "
  if [ -e $PIDFILE ]; then
    kill `cat $PIDFILE` && echo_success || echo_failure
    rm -f ${lockfile}
    rm -f ${PIDFILE}
  else
    echo -n "daemon is not running.."
    echo_warning
  fi
  echo
}

function status() {
  # show status
  echo -n $"show status of $prog: "
  if [ -e $PIDFILE ] && pgrep $prog > /dev/null 2>&1 ; then
    echo -n "daemon is running"
    echo_success
  else
    echo "daemon is not running.."
    exit 3
  fi
  echo
}

case "$1" in
  status)
    # Invoke the status function
    status
    ;;
  start)
    # Invoke the start function
    start
    ;;
  stop)
    # Invoke the stop function
    stop
    ;;
  restart)
    # First invoke the stop function
    stop
    # And then start it
    start
    ;;
  *)
    # Didn't get any of the expected commands
    echo "Usage: "$1" {start|stop|status|restart}"
    exit 1
esac
