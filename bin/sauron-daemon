#! /usr/bin/env python

import os
import argparse				# Options are good
from sauron import Watcher	# Everything
import shelve         # serializer on disk

global tempdict

def load_cache():
  """Load cache"""
  myshelve = '/tmp/sauron.cache'
  return shelve.open(myshelve, writeback=True)

def writePidFile():
  pid = str(os.getpid())
  f = open('/var/run/sauron.pid', 'w')
  f.write(pid)
  f.close()

parser = argparse.ArgumentParser(description='Monitoring daemon')
parser.add_argument('--dry-run', dest='dryrun', action='store_true', default=False,
					help='Collect metrics, but do not push them.')

# Parse arguments, and then instantiate a watcher with those options
args = parser.parse_args()

tempdict = load_cache()
w = Watcher(dryrun=args.dryrun)
writePidFile()
w.start()
